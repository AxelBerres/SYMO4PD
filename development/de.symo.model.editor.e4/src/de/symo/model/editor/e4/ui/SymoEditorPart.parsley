import de.symo.model.editor.e4.ui.SymoEditorView
import de.symo.model.symo.SymoFactory
import org.eclipse.emf.parsley.edit.IEditingStrategy
import org.eclipse.emf.parsley.edit.UndoableEditingStrategy
import org.eclipse.swt.SWT
import de.symo.model.symo.SystemElement
import de.symo.model.element.Parameter
import de.symo.model.element.MetaData
import de.symo.model.element.Value
import de.symo.model.element.Mode
import de.symo.model.element.Relation
import de.symo.model.element.Connection
import de.symo.model.element.Transition
import de.symo.model.symo.StateMaschine

/**
 * @since 2016-11-21
 * @author Axel.Berres@...
 */
module de.symo.model.editor.e4.ui.symo {	
		
	parts {
		viewpart de.symo.model.editor.e4.ui.symo {
			viewname "System model"
			viewclass SymoEditorView
		}
	}
	
	bindings {
		type IEditingStrategy -> UndoableEditingStrategy
		value int TreeFormSashStyle -> SWT.VERTICAL
	}
	
	resourceManager {
		initializeResource {
			val prj = SymoFactory.eINSTANCE.createProjectRepository
			prj.name = "Base"
			it.getContents += prj
		}
	}	

	labelProvider {
		
		text {
			Transition	t -> { t.name + " : " + t.source.name + " > " + t.^target.name }
		}

		image {
			SystemElement	-> "SystemElement.gif"
			Parameter 		-> "Parameter.gif"
			MetaData  		-> "MetaData.gif"
			Value 			-> "Value.gif"
			Mode			-> "State.gif"
			Relation		-> "Relation.gif"
			Connection		-> "Connection.gif"
			Transition		-> "Transition.gif"
			StateMaschine	-> "StateMaschine.gif"
		}		
	}
}