import org.eclipse.emf.common.util.URI
import org.eclipse.emf.parsley.edit.IEditingStrategy
import org.eclipse.emf.parsley.edit.UndoableEditingStrategy
import de.symo.model.editor.registry.RegistrySaveableTreeFormView
import org.eclipse.swt.SWT
import de.symo.model.registry.Registry
import de.symo.model.registry.RegistryFactory
import de.symo.model.registry.Constant

module de.symo.modeleditor.registry {
	
	parts {
		viewpart de.symo.modeleditor.registry {
			viewname  "Registry"
			viewclass RegistrySaveableTreeFormView
		}
	}
	
	configurator {
		resourceURI {
			RegistrySaveableTreeFormView -> {
				return URI.createFileURI(System.getProperty("user.home") + "/ MyLibrary.library" );
			}
		}
	}
	
	resourceManager {
		initializeResource {
			it.getContents += RegistryFactory.eINSTANCE.createRegistry			
		}
	}	
	
	featuresProvider {
	    features {
	        Registry -> name
            Constant -> name
        }
    }
    
	featureCaptionProvider {
	    text {
	        Registry : name -> "Name"
	        Constant : name -> "Name:"
	    }
	}
	
	// 
	labelProvider {
	    text {
	        Registry r -> { '"' + r.name + '"' }
	        Constant c -> { c.name }
	    }
	}
	
//	menuBuilder {
//		val factory = RegistryFactory.eINSTANCE
//		emfMenus {
//			Writer w -> #[
//				actionChange("New Book", w.eContainer as Library,
//					[
//						library	|
//						val book = factory.createBook
//						library.books += book
//						book.title = "A new book"
//						book.author = w
//					]					
//				)				
//			]
//			Book b -> #[
//				actionChange("New Writer", b.eContainer as Library,
//					[
//						library |
//						val writer = factory.createWriter
//						library.writers += writer
//						writer.name = "A new writer"
//						writer.books += b						
//					]
//				),
//				actionAdd("New Book (same title)", 
//							(b.eContainer as Library).books,
//							factory.createBook,
//							[title = b.title]
//				)				
//			]
//		}	
//	}
	
	viewerContentProvider {
		children {
			Registry -> {
				measurements + constants + stereotypes
			}
		}
	}
	
	bindings {
		type IEditingStrategy -> UndoableEditingStrategy
		value int TreeFormSashStyle -> SWT.VERTICAL
	}
}
