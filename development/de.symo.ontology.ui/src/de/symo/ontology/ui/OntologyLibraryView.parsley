import de.symo.ontology.ui.OntologyLibraryView
import model.ModelFactory
import model.Ontology
import model.OntologyLibrary
import model.OntologyRepository
import org.eclipse.emf.edit.domain.AdapterFactoryEditingDomain
import org.eclipse.emf.parsley.edit.domain.GlobalAdapterFactoryEditingDomainProvider
import org.eclipse.jface.dialogs.MessageDialog
import org.eclipse.swt.SWT
import org.eclipse.swt.layout.GridLayout
import org.eclipse.swt.widgets.Button
import org.eclipse.swt.widgets.Composite
import org.eclipse.emf.parsley.edit.IEditingStrategy
import org.eclipse.emf.parsley.edit.UndoableEditingStrategy

module de.symo.ontology.ui {
	
	parts {
		viewpart de.symo.ontology.ui {
			viewname "Ontology Library"
			viewclass OntologyLibraryView
		}
	}
	
	bindings {
		type IEditingStrategy -> UndoableEditingStrategy
		value int TreeFormSashStyle -> SWT.HORIZONTAL
		
		// with this binding, a global EditingDomain will be used:
		// other modules extending this module will share the EditingDomain
		provide AdapterFactoryEditingDomain -> GlobalAdapterFactoryEditingDomainProvider
	}
	
	featureCaptionProvider{
		text{
			OntologyLibrary : activeOntology -> "Active Ontology:"
			Ontology : path -> "Path:"
			Ontology : fileName -> "Filename:"
		}
	}

	featuresProvider{
		features{
			Ontology -> path, fileName, maintenanceFileName
			OntologyRepository -> path, fileName, maintenanceFileName, URL, username, password
		}
	}		
	
	labelProvider {
			text {
				OntologyLibrary -> "Library"
				Ontology -> fileName + " (local)"
				OntologyRepository -> fileName + " (git)"
			}
			image {
				OntologyLibrary -> "OntologyLibrary_16.png"
				Ontology -> "OntologyLocal_16.png"
				OntologyRepository -> "OntologyRepository_16.png"
			}
	}
		
	formControlFactory {
		control {
			OntologyLibrary : activeOntology -> {
				val c = new Composite(parent, SWT.NONE)
				c.layout = new GridLayout(2, false)
				val t = createText(c, SWT.BORDER)
				val b = new Button(c, SWT.PUSH)
				b.^text = "Push me"
				b.addListener(SWT.MouseDown) [
					MessageDialog.openInformation(c.shell, "Event", "You pushed me!")
				]
				return t
			} target {
				observeText
			}
		}
	}
	
	resourceManager {
		initializeResource {
			it.getContents += ModelFactory.eINSTANCE.createOntologyLibrary
		}
	}
	
	menuBuilder {
		emfMenus {
			Ontology ont -> #[
				actionChange("Set Active", ont.eContainer as OntologyLibrary,
					[
						ontologyLibrary |
						ontologyLibrary.activeOntology = ont;	
					]
				)
			]
		}
	}
}
